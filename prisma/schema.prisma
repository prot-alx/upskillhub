// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String      @unique
  name      String?
  role      Role        @default(USER)
  courses   Enrollment[]
  coursesTaught Course[] @relation("InstructorRelation")
  settings  UserSettings? // Связь с настройками
  createdAt DateTime    @default(now())
}

model UserSettings {
  id             String   @id @default(uuid())
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String   @unique
  theme          String   @default("light") // "light" | "dark"
  notifications  Boolean  @default(true)
  // Здесь можно добавить другие настройки пользователя
  updatedAt      DateTime @updatedAt
}

model Course {
  id          String  @id @default(uuid())
  title       String
  description String
  instructor  User    @relation(fields: [instructorId], references: [id], name: "InstructorRelation")
  instructorId String
  students    Enrollment[]
  createdAt   DateTime @default(now())
}

model Enrollment {
  id       String @id @default(uuid())
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
  createdAt DateTime @default(now())
  @@unique([userId, courseId])
}

enum Role {
  USER
  ADMIN
}
